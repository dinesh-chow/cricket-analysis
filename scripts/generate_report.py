import pandas as pd
from datetime import datetime
import os

def generate_summary_report():
    """Generate a comprehensive markdown report of the analysis."""
    
    # Load cleaned data
    df = pd.read_csv('data/cleaned_all_players.csv')
    
    # Prepare report content
    report_content = f"""# Cricket Players Data Analysis Report

**Generated on:** {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}

## Dataset Overview
- **Total Players:** {len(df):,}
- **Countries Represented:** {df['country_name'].nunique()}
- **Continents:** {df['continent_name'].nunique()}
- **Data Quality:** {len(df)} unique players (removed duplicates)

## Key Statistics

### Top 10 Countries by Player Count
"""
    
    # Add top countries
    country_counts = df['country_name'].value_counts().head(10)
    for i, (country, count) in enumerate(country_counts.items(), 1):
        report_content += f"{i}. **{country}**: {count:,} players\n"
    
    report_content += f"""
### Demographics
- **Male Players:** {df[df['gender'] == 'm'].shape[0]:,} ({df[df['gender'] == 'm'].shape[0]/len(df)*100:.1f}%)
- **Female Players:** {df[df['gender'] == 'f'].shape[0]:,} ({df[df['gender'] == 'f'].shape[0]/len(df)*100:.1f}%)

### Playing Styles
"""
    
    # Add batting styles
    batting_styles = df['battingstyle'].value_counts()
    for style, count in batting_styles.items():
        report_content += f"- **{style.title()}**: {count:,} players\n"
    
    report_content += "\n### Continental Distribution\n"
    continent_counts = df['continent_name'].value_counts()
    for continent, count in continent_counts.items():
        report_content += f"- **{continent}**: {count:,} players\n"
    
    report_content += f"""
## Notable Players from Top Countries

"""
    
    # Add sample notable players
    top_5_countries = country_counts.head(5).index.tolist()
    for country in top_5_countries:
        sample_players = df[df['country_name'] == country]['fullname'].head(5).tolist()
        report_content += f"**{country}:** {', '.join(sample_players)}\n\n"
    
    report_content += """
## Data Quality Notes
- Removed duplicate player entries
- Standardized column names for consistency
- Missing values handled appropriately

## Generated Visualizations
1. `players_per_country.png` - Top 10 countries by player count
2. `batting_styles.png` - Distribution of batting styles
3. `gender_distribution.png` - Gender distribution pie chart

---
*Report generated by Cricket Players Analysis System*
"""
    
    # Save report
    os.makedirs('reports', exist_ok=True)
    with open('reports/summary_report.md', 'w', encoding='utf-8') as f:
        f.write(report_content)
    
    print("Summary report generated: reports/summary_report.md")
    return report_content

if __name__ == "__main__":
    generate_summary_report()
